//variable... de tipo Maestros
Maestros Thom;
Maestros Coordi;
Maestros Natalia;
Maestros Zarate;
Maestros Cartasi;
int pantalla;
int turno;

//ataques del jugador 1
int atqA, atqB, atqC;

//ataques del jugador 2
int atqAA, atqBB, atqCC;

//personaje seleccionado
int A, B;

String nombre[]={"Cartasi", "Coordi", "Natalia", "Thom", "Zarate"};

void setup()
{
  background(0);
  frameRate(15);
  size(1000, 700);
  pantalla = 0;
  turno = 1;
  textAlign(CENTER, CENTER);

  Cartasi = new Maestros("Cartasi", 10, 1, 2, 3, 0);
  Coordi = new Maestros("Coordi", 10, 2, 3, 5, 1);
  Natalia = new Maestros("Natalia", 10, 3, 3, 5, 2);
  Thom = new Maestros("Thom", 10, 2, 3, 4, 3);
  Zarate = new Maestros("Zarate", 10, 5, 5, 6, 4);
}  


void draw()
{
  //println("A: " + atqA + " B: " + atqAA);

  switch(pantalla)
  {
  case 0:
    Intro();
    break;
  case 1:
    Seleccion();
    break;
  case 2:
    Juego();
    break;
  case 3:
    Final();
    break;
  }
}

void Intro ()
{
  background(203, 17, 0);
  fill(255, 255, 0);
  textSize(50);
  text("INICIO", width/2, height/2);
  textSize(10);
  text("Presiona Espacio para continuar", width/2, height/2+40);

  if (key == ' ')
  {
    pantalla=1;
  }
}

void Final()
{
  background(203, 17, 0);
  fill(255, 255, 0);
  textSize(50);
  if(vidaA <= 0 || vidaB <= 0)
  {
    text("FIN", width/2, height/2);
  }
}
//////////////CLASE
class Maestros
{
  String nombre;
  int vida;
  int ataqueA;
  int ataqueB;
  int especial;
  int dibujo;
  float posX, posY;
  float sc;

  Maestros (String nombre_, int vida_, int ataqueA_, int ataqueB_, int especial_, int dibujo_)
  {
    nombre=nombre_;
    vida=vida_;
    ataqueA=ataqueA_;
    ataqueB=ataqueB_;
    especial=especial_;
    dibujo=dibujo_;
  }

  //Dibuja al personaje
  void Dibujar(float x, float y)
  {
    posX = x;
    posY = y;
    sc = 0.3;
    
    pushMatrix();
    translate(posX, posY);
    scale(sc);
    switch(dibujo)
    {
    case 0: 
      cartasi();
      break;
    case 1:
      cordi();
      break;
    case 2:
      natalia();
      break;
    case 3:
      thompson();
      break;
    case 4:
      zarate();
      break;
    }
    //mouseOver();
    popMatrix();
  }

  //Dibuja la barra de vida
  void Vida(int x, int y, int largo)
  {
    strokeWeight(2);
    stroke(255, 0, 0);
    rect(x, y, 200, 20);

    fill(255);
    noStroke();
    rect(x, y, largo*20, 20);
  }

  //Seleccionar con el cursor
  void mouseOver()
  { 
    pushMatrix();
    noFill();
    strokeWeight(3);
    rect(0, 0, 500, 600);
    popMatrix();
    
    if (mouseX >= posX && mouseX <= posX+(500*sc) && mouseY >= posY && mouseY <= posY+(600*sc))
    {
      fill(255);
      rect(0, 0, 500, 600);
      pushMatrix();
      scale(3.35);
      Dibujar(0, 0); 
      popMatrix();    
    }
  }
}


///////////////////// JUEGO

//Vida de personajes
int vidaA, vidaB;

void Juego()
{
  background(203, 17, 0); 
  textSize(15);
  text("Q: Ataque A", 100, 500);
  text("W: Ataque B", 100, 520);
  text("E: Especial", 100, 540);

  text("A: Ataque A", 600, 500);
  text("S: Ataque B", 600, 520);
  text("D: Especial", 600, 540);

  switch(A)                               //Personaje seleccionado por jugador 1
  {
  case 1:
    Cartasi.Dibujar(100, 300);            //Dibuja de nuevo al personaje seleccionado
    Cartasi.Vida(100, 100, vidaA);        //Dibuja la barra de vida del personaje seleccionado
    break;

  case 2:
    Coordi.Dibujar(100, 300);
    Coordi.Vida(100, 100, vidaA);
    break;

  case 3:
    Natalia.Dibujar(100, 300);
    Natalia.Vida(100, 100, vidaA);
    break;

  case 4: 
    Thom.Dibujar(100, 300);
    Thom.Vida(100, 100, vidaA);
    break;

  case 5:
    Zarate.Dibujar(100, 300);
    Zarate.Vida(100, 100, vidaA);
    break;
  }

  switch(B)
  {
  case 1:
    Cartasi.Dibujar(600, 300);
    Cartasi.Vida(600, 100, vidaB);
    break;

  case 2:
    Coordi.Dibujar(600, 300);
    Coordi.Vida(600, 100, vidaB);
    break;

  case 3:
    Natalia.Dibujar(600, 300);
    Natalia.Vida(600, 100, vidaB);
    break;

  case 4: 
    Thom.Dibujar(600, 300);
    Thom.Vida(600, 100, vidaB);
    break;

  case 5:
    Zarate.Dibujar(600, 300);
    Zarate.Vida(600, 100, vidaB);
    break;
  }

  println(vidaA + " " + vidaB);

  if (turno == 1 && keyPressed)        //Cuando es turno del jugador 1 y presionamos la tecla...
  {
    switch(key)
    {
    case 'q':
      vidaB = vidaB - atqA;            //Resta a la vida del personaje 2 lo del Ataque A
      turno = 2;
      break;

    case 'w':
      vidaB = vidaB - atqB;
      turno = 2;
      break;

    case 'e':
      vidaB = vidaB - atqC;
      turno = 2;
      break;
    }
  }

  if (turno == 2 && keyPressed)
  {
    switch(key)
    {
    case 'a':
      vidaA = vidaA - atqAA;
      turno = 1;
      break;

    case 's':
      vidaA = vidaA - atqBB;
      turno = 1;
      break;

    case 'd':
      vidaA = vidaA - atqCC;
      turno = 1;
      break;
    }
  }

  if (vidaA <= 0 || vidaB <= 0)
  {
    Final();
  }
}


///////////////////SELECCION

//Muestra la pantalla con los personajes
void Seleccion()
{
  background (203, 17, 0);
  if (turno==1)
  {
    text("JUGADOR 1", width/2, 100);
    textSize(20);
    text("Presione 1 - 5 para seleccionar a su personaje", width/2, height-50);
  }

  if (turno==2)
  {
    text("JUGADOR 2", width/2, 100);
    textSize(20);
    text("Presione A - E para seleccionar a su personaje", width/2, height-50);
  }

  Cartasi.Dibujar(25, height/2 - 90);
  Coordi.Dibujar(225, height/2 - 90);
  Natalia.Dibujar(425, height/2 - 90);
  Thom.Dibujar(625, height/2 - 90);
  Zarate.Dibujar(825, height/2 - 90);

  //Seleccionar personaje del jugador 1 
  switch(key)
  {
  case '1':
    A = 1;
    turno = 2;
    break;

  case '2':
    A = 2;
    turno = 2;
    break;

  case '3':
    A = 3;
    turno = 2;
    break;

  case '4':
    A = 4;
    turno = 2;
    break;

  case '5':
    A = 5;
    turno = 2;
    break;
  }

  switch(A)
  {
  case 1:
    atqA = Cartasi.ataqueA;
    atqB = Cartasi.ataqueB;
    atqC = Cartasi.especial;
    vidaA = Cartasi.vida;
    break;

  case 2:
    atqA = Coordi.ataqueA;
    atqB = Coordi.ataqueB;
    atqC = Coordi.especial;
    vidaA = Coordi.vida;
    break;

  case 3:
    atqA = Natalia.ataqueA;
    atqB = Natalia.ataqueB;
    atqC = Natalia.especial;
    vidaA = Natalia.vida;
    break;

  case 4:
    atqA = Thom.ataqueA;
    atqB = Thom.ataqueB;
    atqC = Thom.especial;
    vidaA = Thom.vida;
    break;

  case 5:
    atqA = Zarate.ataqueA;
    atqB = Zarate.ataqueB;
    atqC = Zarate.especial;
    vidaA = Zarate.vida;
    break;
  }


  //seleccionar personaje de jugador 2
  if (turno == 2)
  {
    switch(key)
    {
    case 'a':
      B = 1;
      pantalla = 2;
      turno = 1;
      break;

    case 'b':
      B = 2;
      pantalla = 2;
      turno = 1;
      break;

    case 'c':
      B = 3;
      pantalla = 2;
      turno = 1;
      break;

    case 'd':
      B = 4;
      pantalla = 2;
      turno = 1;
      break;

    case 'e':
      B = 5;
      pantalla = 2;
      turno = 1;
      break;
    }

    switch(B)
    {
    case 1:
      atqAA = Cartasi.ataqueA;
      atqBB = Cartasi.ataqueB;
      atqCC = Cartasi.especial;
      vidaB = Cartasi.vida;
      break;

    case 2:
      atqAA = Coordi.ataqueA;
      atqBB = Coordi.ataqueB;
      atqCC = Coordi.especial;
      vidaB = Coordi.vida;
      break;

    case 3:
      atqAA = Natalia.ataqueA;
      atqBB = Natalia.ataqueB;
      atqCC = Natalia.especial;
      vidaB = Natalia.vida;
      break;

    case 4:
      atqAA = Thom.ataqueA;
      atqBB = Thom.ataqueB;
      atqCC = Thom.especial;
      vidaB = Thom.vida;
      break;

    case 5:
      atqAA = Zarate.ataqueA;
      atqBB = Zarate.ataqueB;
      atqCC = Zarate.especial;
      vidaB = Zarate.vida;
      break;
    }
  }
}


//////////////////////CARTASI

void cartasi(){
  strokeWeight(3);
  strokeJoin(ROUND);
  strokeCap(ROUND);
  //nombre
  fill(0);
  textSize(50);
  text("CARTASI", 260, 500);
  
  
  //cuello
  fill(255,207,160);
  rect(240,360,20,20);
  //audifonos
  
  fill(0);
  ellipse(250,225,236,270);
  //cabeza
  fill(255,207,160);
  ellipse(250,230,230,270);
  
  //ojos
  fill(0);
  quad(155,185,155,195,230 ,210,230, 200);
  //rect(155,190,75,10);
  fill(0);
  quad(270,210,270,200,345, 185, 345, 195);
 // rect(270,190,75,10);
  arc(200,200,50,50,0,PI,CHORD);
  arc(300,200,50,50,0,PI,CHORD);
  //nariz
  fill(255,207,160);
  arc(250,250,15,15,0,PI);
  //boca
  fill(255,216,239);
  rect(225,300,50,5);
  //audifonos
  fill(0);
  rect(120, 200, 30,65, 10);
  fill(0);
  rect(350, 200, 30,65, 10);

  //cuerpo torzo
  fill(11,33,2);
  beginShape();
  vertex(230,440);
  vertex(230,400);
  vertex(225,420);
  vertex(230,425);
  vertex(230,435);
  vertex(210,425);
  vertex(220,390);
  vertex(240,380);
  ///
  vertex(260,380);
  vertex(280,390);
  vertex(290,425);
  vertex(270,435);
  vertex(270,425);
  vertex(275,420);
  vertex(270,400);
  vertex(270,440);
  endShape(CLOSE);
  beginShape();
  
  //cuerpo torzo piel
  fill(255,207,160);
  beginShape();
  
  vertex(225,420);
  vertex(230,425);
  vertex(230,435);
  vertex(210,425);
  vertex(212,415);
  endShape(CLOSE);
  ///
  fill(255,207,160);
  beginShape();
  vertex(288,415);
  vertex(290,425);
  vertex(270,435);
  vertex(270,425);
  vertex(275,420);
  endShape(CLOSE);
  beginShape();
  
  //piernas
  fill(3,11,49);
  beginShape();
  vertex(250,440);
  vertex(250,470);
  vertex(268,470);
  vertex(268,440);
  ///////
  vertex(232,440);
  vertex(232,470);
  vertex(250,470);
  vertex(250,440);
  endShape(CLOSE);
  
  beginShape();
  vertex(250,440);
  vertex(250,470);
  vertex(268,470);
  vertex(268,440);
  ///////
  vertex(232,440);
  vertex(232,470);
  vertex(250,470);
  vertex(250,440);
  endShape(CLOSE);
  
  //pies
  fill(0);
  arc(240,470,20,15,PI,TWO_PI,CHORD);
  fill(0);
  arc(260,470,20,15,PI,TWO_PI,CHORD);
}


////////////////////COORDI

void cordi(){
  strokeWeight(3);
  strokeJoin(ROUND);
  strokeCap(ROUND);
  //nombre
  fill(0);
  textSize(50);
  text("COORDI", 260, 500);
  
  //cuello
  fill(255,207,160);
  rect(240,360,20,20);
  //cabeza
  fill(0);
  ellipse(250,230,230,270);
  //barba y bigote
  fill(255,207,160);
  ellipse(250,220,230,250);
  
  //cabello  
  fill(0);
  arc(250,170,215,145,PI,TWO_PI,CHORD);
  fill(0);
  beginShape();
  vertex(135,200);
  vertex(160,170);
  vertex(142,165);
  endShape(CLOSE);
  fill(0);
  beginShape();
  vertex(365,200);
  vertex(345,170);
  vertex(358,165);
  endShape(CLOSE);
  
  //barba
  fill(0);
  ellipse(250,310,170,75);
  fill(255,207,160);
  ellipse(250,305,140,30);
  //ojos
  fill(0);
  rect(155,190,75,10);
  fill(0);
  rect(270,190,75,10);
  arc(200,200,50,50,0,PI,CHORD);
  arc(300,200,50,50,0,PI,CHORD);
  //nariz
  fill(255,207,160);
  arc(250,250,15,15,0,PI);
  //boca
  fill(255,216,239);
  rect(225,300,50,5);

  //cuerpo torzo
  fill(7,128,219);
  beginShape();
  vertex(230,440);
  vertex(230,400);
  vertex(225,420);
  vertex(230,425);
  vertex(230,435);
  vertex(210,425);
  vertex(220,390);
  vertex(240,380);
  ///
  vertex(260,380);
  vertex(280,390);
  vertex(290,425);
  vertex(270,435);
  vertex(270,425);
  vertex(275,420);
  vertex(270,400);
  vertex(270,440);
  endShape(CLOSE);
  beginShape();
  //cuerpo piernas
  fill(15,4,67);
  beginShape();
  vertex(250,440);
  vertex(250,470);
  vertex(268,470);
  vertex(268,440);
  ///////
  vertex(232,440);
  vertex(232,470);
  vertex(250,470);
  vertex(250,440);
  endShape(CLOSE);
  //pies
  fill(0);
  arc(240,470,20,15,PI,TWO_PI,CHORD);
  fill(0);
  arc(260,470,20,15,PI,TWO_PI,CHORD);
}


//////////////NATALIA

void natalia(){
  strokeWeight(3);
  strokeJoin(ROUND);
  strokeCap(ROUND);
  //nombre
  fill(0);
  textSize(50);
  text("NATALIA", 260, 500);
  
  //cabello
  fill(255,257,157);
  quad(125, 198,375,198, 400, 390, 100, 390);
  //cuello
  fill(255,207,160);
  rect(240,360,20,20);
  //cabeza
  fill(255,207,160);
  ellipse(250,230,230,270);
  //cabello1
  fill(255,252,157);
  arc(250,200,250,210,PI,TWO_PI);
   
  
  //ojos
  fill(0);
  quad(155,200,155,210,230 ,200,230, 190);
  //rect(155,190,75,10);
  fill(0);
  quad(270,190,270,200,345, 210, 345, 200);
 // rect(270,190,75,10);
  arc(200,200,50,50,0,PI,CHORD);
  arc(300,200,50,50,0,PI,CHORD);
  //nariz
  fill(255,207,160);
  arc(250,250,15,15,0,PI);
  //boca
  fill(255,216,239);
  arc(250,300,50,20,0,PI,CHORD);
//piernas
  fill(5,160,240);
  beginShape();
  vertex(250,440);
  vertex(250,470);
  vertex(268,470);
  vertex(268,440);
  ///////
  vertex(232,440);
  vertex(232,470);
  vertex(250,470);
  vertex(250,440);
  endShape(CLOSE);
  
  beginShape();
  vertex(250,440);
  vertex(250,470);
  vertex(268,470);
  vertex(268,440);
  ///////
  vertex(232,440);
  vertex(232,470);
  vertex(250,470);
  vertex(250,440);
  endShape(CLOSE);
  //cuerpo torzo
  fill(255);
  beginShape();
  vertex(235,420);
  vertex(230,400);
  vertex(225,420);
  vertex(230,425);
  vertex(230,435);
  vertex(210,425);
  vertex(220,390);
  vertex(240,380);
  ///
  vertex(260,380);
  vertex(280,390);
  vertex(290,425);
  vertex(270,435);
  vertex(270,425);
  vertex(275,420);
  vertex(270,400);
  vertex(265,420);
  vertex(275,440);
  vertex(225,440);
  endShape(CLOSE);
  beginShape();
  
  //cuerpo torzo piel
  fill(255,207,160);
  beginShape();
  
  vertex(225,420);
  vertex(230,425);
  vertex(230,435);
  vertex(210,425);
  vertex(212,415);
  
  endShape(CLOSE);
  ///
  fill(255,207,160);
  beginShape();
  vertex(288,415);
  vertex(290,425);
  vertex(270,435);
  vertex(270,425);
  vertex(275,420);
  endShape(CLOSE);
  beginShape();
 
  //pies
  fill(255);
  arc(240,470,20,15,PI,TWO_PI,CHORD);
  fill(255);
  arc(260,470,20,15,PI,TWO_PI,CHORD);
}

//////////////THOMPSON

void thompson() {
  strokeWeight(3);
  strokeJoin(ROUND);
  strokeCap(ROUND);
  //nombre
  fill(0);
  textSize(50);
  text("THOMPSON", 260, 500);

  //cuello
  fill(255, 207, 160);
  rect(240, 360, 20, 20);
  //cabeza
  fill(255, 207, 160);
  ellipse(250, 230, 230, 270);


  //sombrero
  fill(255, 250, 200);
  rect(175, 75, 150, 70, 10);
  rect(150, 130, 200, 20, 10);
  //fill(0);
  //arc(250,170,215,145,PI,TWO_PI,CHORD);
  fill(0);
  beginShape();
  vertex(135, 200);
  vertex(160, 170);
  vertex(142, 165);
  endShape(CLOSE);
  fill(0);
  beginShape();
  vertex(365, 200);
  vertex(345, 170);
  vertex(358, 165);
  endShape(CLOSE);
  //lentes
  fill(0, 100);
  beginShape();
  vertex(240, 185);
  vertex(157, 185);
  vertex(157, 230);
  vertex(240, 230);
  endShape(CLOSE);
  beginShape();
  vertex(260, 185);
  vertex(343, 185);
  vertex(343, 230);
  vertex(260, 230);
  endShape(CLOSE);
  ///
  line(240, 200, 260, 200);
  line(157, 200, 135, 220);
  line(343, 200, 363, 220);

  //ojos
  fill(0);
  rect(155, 190, 75, 10);
  fill(0);
  rect(270, 190, 75, 10);
  arc(200, 200, 50, 50, 0, PI, CHORD);
  arc(300, 200, 50, 50, 0, PI, CHORD);
  //nariz
  fill(255, 207, 160);
  arc(250, 250, 15, 15, 0, PI);
  //boca
  fill(255, 216, 239);
  rect(225, 300, 50, 5);

  //cuerpo torzo
  fill(222, 179, 114);
  beginShape();
  vertex(230, 440);
  vertex(230, 400);
  vertex(225, 420);
  vertex(230, 425);
  vertex(230, 435);
  vertex(210, 425);
  vertex(220, 390);
  vertex(240, 380);
  ///
  vertex(260, 380);
  vertex(280, 390);
  vertex(290, 425);
  vertex(270, 435);
  vertex(270, 425);
  vertex(275, 420);
  vertex(270, 400);
  vertex(270, 440);
  endShape(CLOSE);
  beginShape();
  //cuerpo piernas
  fill(162, 122, 58);
  beginShape();
  vertex(250, 440);
  vertex(250, 470);
  vertex(268, 470);
  vertex(268, 440);
  ///////
  vertex(232, 440);
  vertex(232, 470);
  vertex(250, 470);
  vertex(250, 440);
  endShape(CLOSE);
  //pies
  fill(77, 49, 5);
  arc(240, 470, 20, 15, PI, TWO_PI, CHORD);
  fill(77, 49, 5);
  arc(260, 470, 20, 15, PI, TWO_PI, CHORD);

  line(250, 380, 250, 440);
}


//////////////////ZARATE

void zarate() 
{
  strokeWeight(3);
  strokeJoin(ROUND);
  strokeCap(ROUND);
  //nombre
  fill(0);
  textSize(50);
  text("ZARATE", 260, 500);

  //cuello
  fill(255, 207, 160);
  rect(240, 360, 20, 20);
  //cabeza
  fill(255, 207, 160);
  ellipse(250, 230, 230, 270);
  //cabello
  fill(50);
  arc(250, 170, 215, 145, PI, TWO_PI, CHORD);
  fill(50);
  beginShape();
  vertex(142, 165);
  vertex(135, 200);
  vertex(160, 170);
  endShape();
  fill(50);
  beginShape();
  vertex(358, 165);
  vertex(365, 200);
  vertex(345, 170);
  endShape();
  //ojos
  fill(0);
  rect(165, 180, 65, 10);
  fill(0);
  rect(260, 180, 65, 10);
  arc(200, 210, 40, 50, 0, TWO_PI);
  arc(300, 210, 40, 50, 0, TWO_PI);
  //nariz
  fill(255, 207, 160);
  arc(250, 250, 15, 15, 0, PI);
  //boca
  fill(255, 216, 239);
  arc(250, 300, 50, 20, 0, PI, CHORD);


  //cuerpo torzo
  fill(50);
  beginShape();
  vertex(220, 440);
  vertex(225, 400);
  vertex(225, 420);
  vertex(220, 425);
  vertex(220, 435);
  vertex(210, 425);
  vertex(220, 390);
  vertex(240, 380);
  ///
  vertex(260, 380);
  vertex(280, 390);
  vertex(290, 425);
  vertex(280, 435);
  vertex(280, 425);
  vertex(275, 420);
  vertex(275, 400);
  vertex(280, 440);
  endShape(CLOSE);
  beginShape();
  //cuerpo piernas
  fill(2, 7, 57);
  beginShape();
  vertex(250, 440);
  vertex(250, 470);
  vertex(268, 470);
  vertex(268, 440);
  ///////
  vertex(232, 440);
  vertex(232, 470);
  vertex(250, 470);
  vertex(250, 440);
  endShape(CLOSE);
  //pies
  fill(0);
  arc(240, 470, 20, 15, PI, TWO_PI, CHORD);
  fill(0);
  arc(260, 470, 20, 15, PI, TWO_PI, CHORD);
  //panza
  fill(50);
  arc(250, 415, 40, 20, PI, TWO_PI);
}
